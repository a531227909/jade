<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jade.dao.ExpressMapper" >
  <resultMap id="BaseResultMap" type="com.jade.mod.Express" >
    <id column="express_id" property="expressId" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="express_company" property="expressCompany" jdbcType="VARCHAR" />
    <result column="reserve" property="reserve" jdbcType="VARCHAR" />
    <result column="reserve1" property="reserve1" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    express_id, order_id, express_company, reserve, reserve1
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jade.mod.ExpressExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from express
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from express
    where express_id = #{expressId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from express
    where express_id = #{expressId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jade.mod.ExpressExample" >
    delete from express
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jade.mod.Express" useGeneratedKeys="true" keyProperty="id" >
    insert into express (express_id, order_id, express_company, 
      reserve, reserve1)
    values (#{expressId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{expressCompany,jdbcType=VARCHAR}, 
      #{reserve,jdbcType=VARCHAR}, #{reserve1,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jade.mod.Express" useGeneratedKeys="true" keyProperty="id" >
    insert into express
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="expressId != null" >
        express_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="expressCompany != null" >
        express_company,
      </if>
      <if test="reserve != null" >
        reserve,
      </if>
      <if test="reserve1 != null" >
        reserve1,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="expressId != null" >
        #{expressId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="expressCompany != null" >
        #{expressCompany,jdbcType=VARCHAR},
      </if>
      <if test="reserve != null" >
        #{reserve,jdbcType=VARCHAR},
      </if>
      <if test="reserve1 != null" >
        #{reserve1,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jade.mod.ExpressExample" resultType="java.lang.Integer" >
    select count(*) from express
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update express
    <set >
      <if test="record.expressId != null" >
        express_id = #{record.expressId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.expressCompany != null" >
        express_company = #{record.expressCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve != null" >
        reserve = #{record.reserve,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve1 != null" >
        reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update express
    set express_id = #{record.expressId,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      express_company = #{record.expressCompany,jdbcType=VARCHAR},
      reserve = #{record.reserve,jdbcType=VARCHAR},
      reserve1 = #{record.reserve1,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jade.mod.Express" >
    update express
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="expressCompany != null" >
        express_company = #{expressCompany,jdbcType=VARCHAR},
      </if>
      <if test="reserve != null" >
        reserve = #{reserve,jdbcType=VARCHAR},
      </if>
      <if test="reserve1 != null" >
        reserve1 = #{reserve1,jdbcType=VARCHAR},
      </if>
    </set>
    where express_id = #{expressId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jade.mod.Express" >
    update express
    set order_id = #{orderId,jdbcType=VARCHAR},
      express_company = #{expressCompany,jdbcType=VARCHAR},
      reserve = #{reserve,jdbcType=VARCHAR},
      reserve1 = #{reserve1,jdbcType=VARCHAR}
    where express_id = #{expressId,jdbcType=VARCHAR}
  </update>
</mapper>